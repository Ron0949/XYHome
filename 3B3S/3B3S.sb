;XY Screen Configurator Handler - 3B3S (3 buttons / 3 sliders)

Declare Configure_Screen(Config)
Global Config = 5
Configure_Screen(Config);

IncludeFile "MIDI_File_Template_V6.sb"
;IncludeFile "MIDI_File_Template_V7.sb"

Declare ReadCallback(Status, Filename$, File, Size)
Declare TimerEvents()
Declare EditMIDIFile(Type, GadgetNum, Value)
Declare KnobZeroed()
Declare LEDOff()
Declare LoadFrontPage()

Global Slider1Cn, Slider2Cn, Slider3Cn, Slider4Cn
Global SliderNum 

Declare NotesHandler()

;Slider and text box locations
Global NBoxLen = 80
Global OBoxLen = 90
Global Xgap = 20
Global YOffset = 115
Global TextBoxY = YOffset
Global SliderY = TextBoxY + 35

;Text boxes positions
Global NotesXPos = 38, NotesYPos = YOffset
Global OctavesXPos = NotesXPos + NBoxLen + 10, OctavesYPos = YOffset
Global CtrlsXPos = OctavesXPos + OBoxLen + 10, CtrlsYPos = YOffset

;Slider positions
Global NotesSliderXPos = NotesXPos -5, NotesSliderYPos = SliderY
Global OctavesSliderXPos = NotesXPos + NBoxLen + 5, OctavesSliderYPos = SliderY
Global CtrlsSliderXPos = CtrlsXPos, CtrlsSliderYPos = SliderY


;Button origin
Global ButtonX = 106

;Variables
Global NoteNum
Global OctNum
Global CtrlNum
Global BusyFlag
Global url$ = ""

Global Config
; ;Global Dim Link(306)  ;i.e. 2x MIDI file length
; Global Dim Link(270)  ;i.e. 2x MIDI file length

Global HoldCC.b
Global Dim MDhd(153)

Enumeration
  #GADGET_Canvas

EndEnumeration


;Controller value display
  Procedure CtrlsHandler()
;   CtrlText = TextGadget(18, CtrlsXPos, TextBoxY, 265, 23, "MIDI Controller " + Str(GetGadgetState(17)), #PB_Text_Center | #PB_Text_Border)
  CtrlText = TextGadget(18, 45, TextBoxY, 440, 23, "Slider MIDI Controller Number = " + Str(GetGadgetState(17)), #PB_Text_Center | #PB_Text_Border)
    
  ;  SetGadgetColor(18, #PB_Gadget_BackColor,($6A8F99))
  SetGadgetColor(18, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(18, #PB_Gadget_FrontColor, RGB(180,180,180))
  CtrlNum = GetGadgetState(17)
  Debug CtrlNum
      
EndProcedure


;Notes value display
Procedure NotesHandler()
  Notes$ = "C C#D EbE F F#G G#A BbB "
  Note$ = Mid(Notes$,(GetGadgetState(13) * 2 +1), 2)
  NoteText = TextGadget(14, NotesXPos, TextBoxY, 80, 23, "Note " + Mid(Notes$,(GetGadgetState(13) * 2 +1), 2), #PB_Text_Center | #PB_Text_Border)
  SetGadgetColor(14, #PB_Gadget_BackColor,($6A8F99))
  NoteNum = GetGadgetState(13) + (OctNum * 12)
  Debug NoteNum
    
  EndProcedure
 
  
;Octaves value display
  Procedure OctavesHandler()
  OctaveText = TextGadget(16, OctavesXPos, TextBoxY, 90, 23, "Octave " + Str(GetGadgetState(15)), #PB_Text_Center | #PB_Text_Border)
  SetGadgetColor(16, #PB_Gadget_BackColor,($6A8F99))
  OctNum = GetGadgetState(15)
  NoteNum = GetGadgetState(13) + (OctNum * 12)
  Debug NoteNum
    
EndProcedure 

; ;Help
Procedure Help()
  
  Result = ExamineMouse()
  Result = MouseY()
  ;Debug MouseY()
  
  ;Debug EventGadget()
  
  ;Debug X
  Select EventType()
      
    Case #PB_EventType_MouseEnter
      If EventGadget() < 4   ;i.e. toggle button
        HideGadget(22,0)     ;show button help
        
        HideGadget(26,1)     ;hide momentary button help
        HideGadget(23,1)     ;hide slider help
        HideGadget(24,1)     ;hide Export help
        HideGadget(27,1)     ;hide Hold switch help
        
      ElseIf EventGadget() <7   ;i.e. momentary button
      HideGadget(26,0)       ;show momentary button help  
      
        HideGadget(22,1)     ;hide toggle button help
        HideGadget(24,1)     ;hide Export help   
        HideGadget(23,1)     ;hide slider help
        HideGadget(27,1)     ;hide Hold switch help
             
      ElseIf EventGadget() = 21   ;i.e. Export knob
        HideGadget(24,0)     ;show Export help
        
        HideGadget(22,1)     ;hide toggle button help
        HideGadget(26,1)     ;hide momentary button help
        HideGadget(23,1)     ;hide slider help
        HideGadget(27,1)     ;hide Hold switch help
        
        
      ElseIf EventGadget() = 28  ;i.e. Hold switch
        HideGadget(27,0)     ;show Hold switch help
        
        HideGadget(22,1)     ;hide toggle button help
        HideGadget(26,1)     ;hide momentary button help
        HideGadget(23,1)     ;hide slider help
        HideGadget(24,1)     ;hide Export help
                   
      ElseIf  EventGadget() >= 9   ;i.e. slider
        HideGadget(23,0)     ;show slider help 
        
        HideGadget(22,1)     ;hide toggle button help 
        HideGadget(26,1)     ;hide momentary button help
        HideGadget(24,1)     ;hide Export help
        HideGadget(27,1)     ;hide Hold switch help

      EndIf 
      
    Case #PB_EventType_MouseLeave
      HideGadget(23,1)     ;show button help text
      HideGadget(22,1)     ;hide toggle button help
      HideGadget(26,1)     ;hide momentary button help
      HideGadget(24,1)     ;hide Export help
      HideGadget(27,1)     ;hide Hold switch help
      
  EndSelect

   
  
EndProcedure


;Export knob clicked
Procedure ExportHandler()
  ImageGadget(20, 376, 475, ImageWidth(ObjectId), ImageHeight(ObjectId), ImageID(3)) ;Turn knob
  
;  ImageGadget(20, 372, 466, 0, 0, ImageID(3)) ;Turn knob
  
   AddWindowTimer(1, 2, 7000) ;knob turned duration
     BindEvent(#PB_Event_Timer, @KnobZeroed())
  Debug "Knob clicked" 
  
  ;********** Create and write array to file ********************
    Select Config
   Case 1
     Result = CreateFile(0,"XY_Screen.mid",#PB_UTF8)
       For i = 1 To ArraySize(MDhd())
        WriteByte(0,MDhd(i))
       Next 
     
   Case 2
     Result = CreateFile(0,"Multi-Function.mid",#PB_UTF8)
       For i = 1 To ArraySize(MDhd())
        WriteByte(0,MDhd(i))
       Next 
     
   Case 3
     Result = CreateFile(0,"Four_Sliders.mid",#PB_UTF8)
       For i = 1 To ArraySize(MDhd())
        WriteByte(0,MDhd(i))
       Next 
     
   Case 4
     Result = CreateFile(0,"Four_Buttons.mid",#PB_UTF8)
       For i = 1 To ArraySize(MDhd())
        WriteByte(0,MDhd(i))
      Next 
      
    Case 5
     Result = CreateFile(0,"3B3S.mid",#PB_UTF8)
       For i = 1 To ArraySize(MDhd())
        WriteByte(0,MDhd(i))
       Next 
     
   EndSelect 
   
   
   Debug "Array size knob clicked " + Str(ArraySize(MDhd()))
   
  
; ;Write array to file
;   Result = CreateFile(0,"Screen_Config.mid",#PB_UTF8)
;   For i = 1 To ArraySize(MDhd())
;     WriteByte(0,MDhd(i))
;   Next   
;   
; ;Export file And close - moved to timer 2
;   ExportFile(0,"audio/midi", #PB_LocalFile)  
;   CloseFile(0) 
;   
;     Debug "file exported" 
  

;Convert array to csv
   url$ = ""
    For i = 1 To ArraySize(MDhd())
      url$ = url$ + MDhd(i) + ","   
    Next
    
    Debug "url length " +Str(Len(url$))
       url$ = "http:///winterwood.atwebpages.com/Program?" + url$
    
;Use Program hosted with https:// by GitHub instead  
;    url$ = "https:///ron0949.github.io/XYHome/Program?" + url$
    
    
     
    Debug url$
    
    
;Open webgadget
    HideGadget(30,0)
    HideGadget(31,0)
 ;   WebGadget(90, 100, 224, 210, 272, url$)
    WebGadget(90, 85, 195, 218, 277, url$)
    
;  ExportFile(0,"audio/midi", #PB_LocalFile)  
;  CloseFile(0)
    
  EndProcedure 
  
  
;Button clicked 
  Procedure ButtonHandler(Button)
    
    Debug GetGadgetState(42)
    Debug GetGadgetState(43)
    
    ;    HoldCC = GetGadgetState(42);
    
;     If GetGadgetState(42) = -1
;       SetGadgetState(42, 0)
;     EndIf
;     
;     SetGadgetText(42, " Hold Switch Controller Number " + Str(GetGadgetState(42)));
    
;ButtonNum = EventGadget()
;    ImageGadget(19, 390, 200, ImageWidth(ObjectId), ImageHeight(ObjectId), ImageID(2)) ;LED on
     ImageGadget(#PB_Any, 403, 160, 0, 0, ImageID(2)) ;LED on
  
    AddWindowTimer(1, 1, 300) ;LED flash duration
       BindEvent(#PB_Event_Timer, @LEDOff())
       
   If EventGadget() = 42 ;Hold ccn
     Result = EditMIDIFile(3, EventGadget(), GetGadgetState(42)) ;Hold ccn changed
;     Result = EditMIDIFile(3, EventGadget(), Val(GetGadgetText(42))) ;Hold ccn changed
;    ElseIf EventGadget() >= 9 ;i.e. slider
;      Result = EditMIDIFile(1, EventGadget(), CtrlNum) ;Slider 1-8 clicked  
;    Else
;      Result = EditMIDIFile(2, EventGadget(), CtrlNum);NoteNum) ;Button 1-8 clicked
;    EndIf
     
   ElseIf EventGadget() >= 9 ;i.e. slider
     Result = EditMIDIFile(1, EventGadget(), GetGadgetState(43)) ;Slider 1-8 clicked  
   Else
     Result = EditMIDIFile(2, EventGadget(), GetGadgetState(43));NoteNum) ;Button 1-8 clicked
   EndIf

EndProcedure


;Write new values to array
Procedure EditMIDIFile(Type, GadgetNum, Value)   
;Edit array with button and slider values  
  CcnOffset = 62+5 ; Start signature (80H, 7FH, 7EH) + Tempo Interval added
  NoteOnOffset = CcnOffset + (8*5)  ;8 * (ccn + Tempo = 5)
  HoldOffset = NoteOnOffset + (8*5) ;8 * (Note on + Tempo = 5)
  
  
    Tempo =  5 ;5 = 197 bpm, 6 = 138 bpm
  MDhd(57) = Tempo ;Edit tempo
        
  Select Type
    Case 1
;Write new slider value
  Offset = CcnOffset + (5 * (GadgetNum - 9))
  MDhd(Offset) = Value

    Case 2
;Write new note on value
  Offset = NoteOnOffset + (5 * (GadgetNum - 1))
  MDhd(Offset) = Value
  
    Case 3
;Write new Hold ccn value
  Offset = HoldOffset
  MDhd(Offset) = Value
  
;   CcnOffset = 62+4 ; Start signature (80H, 7FH, 7EH) + Tempo Interval added - single byte delta
;   NoteOnOffset = CcnOffset + (8*4)  ;8 * (ccn + Tempo = 4)
;   HoldOffset = NoteOnOffset + (8*4) ;8 * (Note on + Tempo = 4)
;   Debug NoteOnOffset
;   Debug HoldOffset
;   
;   Tempo =  48;5 ;5 = 197 bpm, 6 = 138 bpm
;   MDhd(57) = Tempo ;Edit tempo
;         
;   Select Type
;     Case 1
; ;Write new slider value
;   Offset = CcnOffset + (4 * (GadgetNum - 9))
;   MDhd(Offset) = Value
;   Debug "Slider offset " + Str(Offset)
; 
;     Case 2
; ;Write new note on value
;   Offset = NoteOnOffset + (4 * (GadgetNum - 1))
;   MDhd(Offset) = Value
;   Debug "Note offset " + Str(Offset)
;   
;     Case 3
; ;Write new Hold ccn value
;   Offset = HoldOffset
;   MDhd(Offset) = Value
;   Debug "Hold offset " + Str(Offset)
;     
 EndSelect

  Debug "Array size edit MIDI file " + Str(ArraySize(MDhd()))

;Copy array to file
  For i = 1 To ArraySize(MDhd())
    WriteByte(0,MDhd(i))
  Next 
EndProcedure


;Open display
Procedure Loaded(Type, Filename$, ObjectId)
  Debug "Array size load images " + Str(ArraySize(MDhd()))
  ; Display the image in a new window  
  If Status = #PB_Status_Loaded
;   OpenWindow(1, 50, 50, 538, 598, "Manson Guitar Works - Multi-Zone Screen Configurator", #PB_Window_ScreenCentered | #PB_Window_BorderLess)
;    OpenWindow(1, 0, 0, 530, 611, "Manson Guitar Works - Multi-Zone Screen Configurator",#PB_Window_BorderLess | #PB_Window_Background);, #PB_Window_ScreenCentered | #PB_Window_BorderLess | #PB_Window_Background); | #PB_Window_SizeGadget)
    OpenWindow(1, 0, 0, ImageWidth(ObjectId), ImageHeight(ObjectId), "Manson Guitar Works - Multi-Zone Screen Configurator",#PB_Window_BorderLess | #PB_Window_Background, #PB_Window_ScreenCentered); | #PB_Window_BorderLess | #PB_Window_Background); | #PB_Window_SizeGadget)    
    ;       OpenWindow(1, 50, 50, 530, 611, "Manson Guitar Works - Multi-Zone Screen Configurator", #PB_Window_Background)
;;   OpenWindow(1, 10, 10, 530, 611, "Manson Guitar Works - Multi-Zone Screen Configurator", #PB_Window_BorderLess)
   
   ;       ImageGadget(#PB_Any, 0, 0, ImageWidth(ObjectId), ImageHeight(ObjectId), ImageID(ObjectId))
    ImageGadget(3, 372, 466, ImageWidth(ObjectId), ImageHeight(ObjectId), ImageID(3))      ;Knob turned
    ImageGadget(2, 403, 160, ImageWidth(ObjectId), ImageHeight(ObjectId), ImageID(2))      ;Green LED
    ImageGadget(0, 0, 0, ImageWidth(ObjectId), ImageHeight(ObjectId), ImageID(0))          ;Front page 
 ;   ImageGadget(0, 0, 0, 0, 0, ImageID(0))      ;Front page
  ;  ImageGadget(1, 403, 160, 0, 0, ImageID(1))                                        ;LED off
    ImageGadget(19, 403, 160, 0, 0, ImageID(1))                                         ;LED off
    ;#PB_Any
    
   Debug ImageWidth(ObjectId)
   Debug (ObjectID)
  ElseIf Status = #PB_Status_Error
    Debug "Error when loading the file: " + Filename$
  EndIf
  
; ;Draw transparent Toggle Button canvases   
  CanvasGadget(3, 90, 200, 45, 25, #PB_Canvas_Transparent)
    BindGadgetEvent(3, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(3, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(3, @Help(), #PB_EventType_MouseLeave)
    
  CanvasGadget(2, 145, 200, 98, 25, #PB_Canvas_Transparent)
    BindGadgetEvent(2, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(2, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(2, @Help(), #PB_EventType_MouseLeave)
;     
;   CanvasGadget(2, 215, 230, 30, 30, #PB_Canvas_Transparent)
;     BindGadgetEvent(2, @ButtonHandler(), #PB_EventType_LeftButtonDown)
;     BindGadgetEvent(2, @Help(), #PB_EventType_MouseEnter)
;     BindGadgetEvent(2, @Help(), #PB_EventType_MouseLeave)
;     
  CanvasGadget(1, 255, 200, 45, 25, #PB_Canvas_Transparent)
    BindGadgetEvent(1, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(1, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(1, @Help(), #PB_EventType_MouseLeave)
    ; 
    
;  ;Draw transparent Momentary Button canvases    
  CanvasGadget(6, 90, 238, 45, 25, #PB_Canvas_Transparent)
    BindGadgetEvent(6, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(6, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(6, @Help(), #PB_EventType_MouseLeave)
    
  CanvasGadget(5, 145, 238, 98, 25, #PB_Canvas_Transparent)
    BindGadgetEvent(5, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(5, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(5, @Help(), #PB_EventType_MouseLeave)
;     
;   CanvasGadget(6, 215, 275, 30, 30, #PB_Canvas_Transparent)
;     BindGadgetEvent(6, @ButtonHandler(), #PB_EventType_LeftButtonDown)
;     BindGadgetEvent(6, @Help(), #PB_EventType_MouseEnter)
;     BindGadgetEvent(6, @Help(), #PB_EventType_MouseLeave)
;     
  CanvasGadget(4, 255, 238, 45, 25, #PB_Canvas_Transparent)
    BindGadgetEvent(4, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(4, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(4, @Help(), #PB_EventType_MouseLeave)
;     
  
;Draw transparent Slider canvases   
  CanvasGadget(11, 88, 332, 45, 135, #PB_Canvas_Transparent)
    BindGadgetEvent(11, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(11, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(11, @Help(), #PB_EventType_MouseLeave)
    
  CanvasGadget(10, 145, 332, 98, 135, #PB_Canvas_Transparent)
    BindGadgetEvent(10, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(10, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(10, @Help(), #PB_EventType_MouseLeave)
    
;   CanvasGadget(10, 212, 235, 37, 250, #PB_Canvas_Transparent)
;     BindGadgetEvent(10, @ButtonHandler(), #PB_EventType_LeftButtonDown)
;     BindGadgetEvent(10, @Help(), #PB_EventType_MouseEnter)
;     BindGadgetEvent(10, @Help(), #PB_EventType_MouseLeave)
    
  CanvasGadget(9, 255, 332, 45, 135, #PB_Canvas_Transparent)
    BindGadgetEvent(9, @ButtonHandler(), #PB_EventType_LeftButtonDown)
    BindGadgetEvent(9, @Help(), #PB_EventType_MouseEnter)
    BindGadgetEvent(9, @Help(), #PB_EventType_MouseLeave)
    
  
;Draw turned knob canvas    
  CanvasGadget(21, 388, 485, 65, 65, #PB_Canvas_Transparent)
  BindGadgetEvent(21, @ExportHandler(), #PB_EventType_LeftButtonDown)
  BindGadgetEvent(21, @Help(), #PB_EventType_MouseEnter)
  BindGadgetEvent(21, @Help(), #PB_EventType_MouseLeave)
  
;Draw Hold switch canvas    
  CanvasGadget(28, 85, 520, 30, 30, #PB_Canvas_Transparent)
  BindGadgetEvent(28, @Help(), #PB_EventType_MouseEnter)
  BindGadgetEvent(28, @Help(), #PB_EventType_MouseLeave)
   
;Draw horizontal sliders and text boxes
;   NotesSlider = TrackBarGadget(13,NotesSliderXPos, SliderY, 90, 10, 0, 11)
;   BindGadgetEvent(13, @NotesHandler())
; 
;   NoteText = TextGadget(14, NotesXPos, TextBoxY, 80, 23, "Select Note", #PB_Text_Center | #PB_Text_Border)
;    SetGadgetColor(14, #PB_Gadget_BackColor, ($6A8F99))
; 
;   OctavesSlider = TrackBarGadget(15, OctavesSliderXPos, SliderY, 98, 10, 0, 9)
;     BindGadgetEvent(15, @OctavesHandler())
; 
;   OctaveText = TextGadget(16, OctavesXPos, TextBoxY, 90, 23, "Select Octave", #PB_Text_Center | #PB_Text_Border)
;   SetGadgetColor(16, #PB_Gadget_BackColor, ($6A8F99))
;
  
;   CtrlsSlider = TrackBarGadget(17, CtrlsSliderXPos -5, SliderY, 275, 10, 0, 127)
;     BindGadgetEvent(17, @CtrlsHandler())
  
    CtrlsSlider = TrackBarGadget(17, 40, SliderY, 450, 10, 0, 127)
    BindGadgetEvent(17, @CtrlsHandler())
    HideGadget(17,1)

;   CtrlsText = TextGadget(18, CtrlsXPos, TextBoxY, 265, 23, "Select Slider MIDI Controller number", #PB_Text_Center | #PB_Text_Border)
;   SetGadgetColor(18, #PB_Gadget_BackColor, ($6A8F99))
    
;    CtrlsText = TextGadget(18, 45, TextBoxY, 440, 23, "Select Slider MIDI Controller number (ccn)", #PB_Text_Center | #PB_Text_Border)
    CtrlsText = TextGadget(18, 25, 105, 475, 28, "Select the Controller Number then click the target slider or button on the 'screen' below", #PB_Text_Center | #PB_Text_Border)
;    SetGadgetColor(18, #PB_Gadget_BackColor, ($6A8F99))
    SetGadgetColor(18, #PB_Gadget_BackColor, RGB(46,49,52))
    SetGadgetColor(18, #PB_Gadget_FrontColor, RGB(180,180,180))
  
;   
;Toggle Button help
  ;HelpText = TextGadget(22, 170, 65, 316, 25, "Select the Note and Octave then click the target button.", #PB_Text_Border) 
  HelpText = TextGadget(22, 25, 575, 475, 25, "Select the 'Toggle' CC number then click 'Toggle' on the target button.", #PB_Text_Border | #PB_Text_Center)
;  SetGadgetColor(22, #PB_Gadget_BackColor, ($6A8F99))
  SetGadgetColor(22, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(22, #PB_Gadget_FrontColor, RGB(180,180,180))
  HideGadget(22,1)
  
;Momentary Button help
  ;HelpText = TextGadget(26, 170, 65, 316, 25, "Select the Note and Octave then click the target button.", #PB_Text_Border) 
  HelpText = TextGadget(26, 25, 575, 475, 25, "Select the 'Momentary' CC number then click 'Momentary' on the target button.", #PB_Text_Border | #PB_Text_Center)
;  SetGadgetColor(26, #PB_Gadget_BackColor, ($6A8F99))
  SetGadgetColor(26, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(26, #PB_Gadget_FrontColor, RGB(180,180,180))
  HideGadget(26,1)
  
;Slider help
  ;HelpText = TextGadget(23, 170, 65, 316, 25, "Select the Controller Number then click the target slider.", #PB_Text_Border | #PB_Text_Center)
  HelpText = TextGadget(23, 25, 575, 475, 25, "Select the Controller Number then click the target slider.", #PB_Text_Border | #PB_Text_Center)
  ;  SetGadgetColor(23, #PB_Gadget_BackColor, ($6A8F99))
  SetGadgetColor(23, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(23, #PB_Gadget_FrontColor, RGB(180,180,180))
  HideGadget(23,1)
  
;Export knob help
  ;HelpText = TextGadget(24, 170, 65, 316, 42, "Click to program guitar and export MIDI file to your 'Download' folder", #PB_Text_Border | #PB_Text_Center)
  HelpText = TextGadget(24, 25, 575, 475, 25, "Click to select MIDI H/W, program the guitar and export a MIDI file to 'Download' folder", #PB_Text_Border | #PB_Text_Center)
;  SetGadgetColor(24, #PB_Gadget_BackColor, ($6A8F99))
  SetGadgetColor(24, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(24, #PB_Gadget_FrontColor, RGB(180,180,180))
  HideGadget(24,1)
  
;Hold switch help
  HelpText = TextGadget(27, 25, 575, 475, 25, "Select the CC number for the Hold switch", #PB_Text_Border | #PB_Text_Center)
;  SetGadgetColor(27, #PB_Gadget_BackColor, ($6A8F99))
  SetGadgetColor(27, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(27, #PB_Gadget_FrontColor, RGB(180,180,180))
  HideGadget(27,1)
  
;Programming - please wait...  
;  ProgText = TextGadget(30, 100, 224, 210, 272, "", #PB_Text_Center | #PB_Text_Border)
  ProgText = TextGadget(30, 85, 195, 218, 277, "", #PB_Text_Center | #PB_Text_Border)
 ; ProgText = TextGadget(30, 100, 224, 210, 222, "", #PB_Text_Center | #PB_Text_Border)
  SetGadgetColor(30, #PB_Gadget_BackColor, RGB(46,49,52));($2C2FB7))
  HideGadget(30,1)
  
; ;Select note 
;   ComboBoxGadget (40, 50, 160, 100 , 20)
;   note$ = "C C#D EbE F F#G G#A Bb B"
;   For Index = 1 To 24 Step 2
;     AddGadgetItem (40, -1, Mid(note$, Index, 2))
;   Next
;   SetGadgetState (40, 0)
;   
; ;Select octave  
;   ComboBoxGadget (41, 180, 160, 100 , 20)
;   For Index = 0 To 9
;   AddGadgetItem (41, -1, " Octave" + Index )
;   Next
;   SetGadgetState (41, 0)  
;   
; ;Select slider Controller number  
;   ComboBoxGadget (42, 340, 160, 150 , 20)
;   For Index = 0 To 127
;   AddGadgetItem (42, -1, " MIDI Controller " + Index )
;   Next
;   SetGadgetState (42, 0)
  
;Select Hold Switch Controller number  
;   ComboBoxGadget (42, 95, 198, 220 , 17)
;   For Index = 0 To 127
;   AddGadgetItem (42, -1, " Hold Switch controller number " + Index )
;   Next
;   SetGadgetState (42, 0)
;   SetGadgetColor(42, #PB_Gadget_BackColor, ($6A8F99))
;   BindGadgetEvent(42, @ButtonHandler(), #PB_EventType_Change)
  
  ;ComboBoxGadget (42, 130, 522, 225 , 22, #PB_ComboBox_Editable)
  ComboBoxGadget (42, 312, 520, 55 , 30, #PB_ComboBox_Editable)
  For Index = 0 To 127
    ;AddGadgetItem (42, -1, " Hold Switch Controller Number " + Index )
    AddGadgetItem (42, -1, "" +Index )
  Next
  SetGadgetState (42, 20)
  SetGadgetColor(42, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(42, #PB_Gadget_FrontColor, RGB(180,180,180)) 
  BindGadgetEvent(42, @ButtonHandler(), #PB_EventType_Change)
  BindGadgetEvent(42, @Help(), #PB_EventType_MouseEnter)
  BindGadgetEvent(42, @Help(), #PB_EventType_MouseLeave)
  
  TextGadget(44, 127, 520, 185 , 30,"Hold Switch CC Number (0-127)", #PB_Text_Border | #PB_Text_Center)
  SetGadgetColor(44, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(44, #PB_Gadget_FrontColor, RGB(180,180,180)) 
  
  ;Buttons and Sliders combo box 
  ;;ComboBoxGadget (43, 82, 163, 225 , 22, #PB_ComboBox_Editable)
  ComboBoxGadget (43, 247, 152, 55 , 30, #PB_ComboBox_Editable)
  For Index = 0 To 127
    ;AddGadgetItem (43, -1, "  Select MIDI CC Number " + Index )
    AddGadgetItem (43, -1, "" + Index )
  Next
  SetGadgetState (43, 0)
  SetGadgetColor(43, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(43, #PB_Gadget_FrontColor, RGB(180,180,180)) 
;  BindGadgetEvent(43, @ButtonHandler(), #PB_EventType_Change)  ;ButtonHandler called by clicking on targets  
  BindGadgetEvent(43, @Help(), #PB_EventType_MouseEnter)
  BindGadgetEvent(43, @Help(), #PB_EventType_MouseLeave)
  
  TextGadget(45, 87, 152, 160 , 30,"Select CC Number (0-127)", #PB_Text_Border | #PB_Text_Center)
  SetGadgetColor(45, #PB_Gadget_BackColor, RGB(46,49,52))
  SetGadgetColor(45, #PB_Gadget_FrontColor, RGB(180,180,180)) 
  
  Debug "Array size pre MIDI Template " + Str(ArraySize(MDhd()))
  MIDITemplate(Config)     ;Generate MIDI file template
  Debug "Array size post MIDI Template " + Str(ArraySize(MDhd()))
  
  EndProcedure 


Procedure LoadingError(Type, Filename$, ObjectId)
  Debug Filename$ + ": loading error"
EndProcedure


Procedure LEDOff()
  RemoveWindowTimer(1, 1)     ;fire once only
  ImageGadget(19, 403, 160, 0, 0, ImageID(1)) ;LED off 
  EndProcedure
  
  
Procedure KnobZeroed()
    RemoveWindowTimer(1, 2)   ;fire once only
    HideGadget(20, 1)
    
;Export file And close
  ExportFile(0,"audio/midi", #PB_LocalFile)  
  CloseFile(0)
  
;Hide Programming message and close Web gadget
  SetActiveWindow(1)
  CloseWindow(89)
  FreeGadget(90)
  HideGadget(30,1)
  HideGadget(31,1)
  SetGadgetState(90, #PB_Web_Refresh)
  
  
  Debug "file exported" 
    
  EndProcedure
  
  
;********************************************************************
Procedure Configure_Screen(Config)  
  ;Register the loading event before calling any resource load command
 BindEvent(#PB_Event_Loading, @Loaded())
 BindEvent(#PB_Event_LoadingError, @LoadingError())
 BindEvent(#PB_Status_Error, @LoadingError())
 
Debug "Config =" + Config
 
  Select Config
   Case 1
     LoadImage(0, "Data\XY Kaoss.png")
     
   Case 2
     LoadImage(0, "Data\Ableton.png") 
     
   Case 3
     LoadImage(0, "Data\Four Sliders.png")
     
   Case 4
     LoadImage(0, "Data\Screen Quadrants.png")
     
   Case 5
     LoadImage(0, "Data\Screen 1 - Copy 4.png") 
     
  EndSelect     
 
; LoadImage(0, "Data\XY Kaoss.png")
; LoadImage(0, "Data\Four Sliders.png")
; LoadImage(0, "Data\Screen Quadrants.png") 
; LoadImage(0, "Data\Ableton.png")
; LoadImage(0, "Data\Front page portrait.png")
  
  ; LoadImage(3, "Data\Knob turned 2.png")
  
LoadImage(3, "Data\Knob turned 4.png")
LoadImage(2, "Data\Green LED.png") ;2
LoadImage(1, "Data\LED Off.png")

;LoadImage(0, "Data\Front page portrait.png")

EndProcedure

;**
; IDE Options = SpiderBasic 2.00 (Windows - x86)
; CursorPosition = 240
; FirstLine = 212
; Folding = ---
; WebAppName = 3 Buttons 3 Sliders
; WebAppIcon = Data\favicon.png
; HtmlFilename = index.html
; JavaScriptFilename = 3B3S Screen Configurator.js
; EnableResourceDirectory
; iOSAppOrientation = 0
; AndroidAppName = 3 Buttons 3 Sliders
; AndroidAppIcon = Data\favicon.png
; AndroidAppVersion = 1.00
; AndroidAppPackageID = uk.org.winterwood
; AndroidAppOutput = 3B3S.apk
; AndroidAppResourceDirectory = C:\ProgramData\SpiderBasic\Projects\XY Screen Configurator V6\3B3S
; AndroidAppEnableResourceDirectory
; AndroidAppOrientation = 1
; AndroidAppEnableDebugger
; EnableXP
; CompileSourceDirectory